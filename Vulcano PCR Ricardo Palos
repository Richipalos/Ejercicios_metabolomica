title: "GRafica de vulcano"
output: html_document
date: "2025-02-26"
---
```{r}
install.packages("pacman")
library("pacman")
p_load("readr",
       "dplyr",
       "ggplot2",
       "ggrepel",
       "matrixTests")

PCR<- read.csv(file ="https://raw.githubusercontent.com/ManuelLaraMVZ/Transcript-mica/main/datos_miRNAs.csv")
View(PCR)

```
```{r}
head(PCR)
#el simbolo magrita %>%  se poen ctrl, shift, M# #Magrita sirve para decirle al 
#codifo que le apique lo hehco al codigo anteriro, de esta forma no se crean varios data frames#

Gen_ref<- PCR %>%
  filter(Condicion == "Control") %>% 
  select(-2)


Gen_ref
```
```{r}
Gen_int<- PCR %>% 
  filter (Condicion == "Target" ) %>% 
  select(-2)
head(Gen_int)
```
```{r}
Mean_ref<- Gen_ref %>% 
  mutate(Prom_Cx = (Cx1+Cx2+Cx3)/3,
         Prom_Tx = (T1+T2+T3)/3) %>% 
  select ("Gen","Prom_Cx", "Prom_Tx")

head(Mean_ref)

```
```{r}
Mean_int<- Gen_int %>% 
  mutate(Prom_Cx = (Cx1+Cx2+Cx3)/3,
         Prom_Tx = (T1+T2+T3)/3) %>% 
  select ("Gen","Prom_Cx", "Prom_Tx")

head(Mean_int) 
#DCT es Delta de los valores  con la <- le pides que se cree una nuevaolumna c 


```

Vamos a correr los proemdios de cada columan de los genes control de forma vertical

mean es la fucnion para sacar el promedio de la columna, se selecciona de que base de datos queremos sacar la columan en este caso de Gen_ref y con el signo $ seleccionamos que columna osea la Cx1, 2 o 3

```{r}
meanCx1<- mean(Gen_ref$Cx1)
meanCx2<- mean(Gen_ref$Cx2)
meanCx3<- mean(Gen_ref$Cx3)
meanT1<- mean(Gen_ref$T1)
meanT2<- mean(Gen_ref$T2)
meanT3<- mean(Gen_ref$T3)
```
Ya tenemos los datos pero no estan guardado solo estan en evioroment. 
Ahora vamos a sacar Delta del Ct de cada columan d elos genes de interes

mutate= sirve para convertir una columna en algo mas
Delta se restan lso valores del promedio proque cada columan es un experimetno independiente
```{r}
DCt<- Gen_int  %>% 
  mutate(DCT_Cx1=Cx1 - meanCx1,
         DCT_Cx2=Cx2 - meanCx2,
         DCT_Cx3=Cx3 - meanCx3,
         DCT_T1=T1 - meanT1,
         DCT_T2=T2 - meanT2,
         DCT_T3=T3 - meanT3,)%>%
  select(-2,-3,-4,-5,-6,-7)
DCt
```
Dos Delta CT
```{r}
DosDCt<- DCt %>%
  mutate(A= 2^-(DCT_Cx1), B = 2^-(DCT_Cx2),
         C= 2^-(DCT_Cx3), D = 2^-(DCT_T1),
         E= 2^-(DCT_T2), F = 2^-(DCT_T3))%>%
  select(-2:-7)
DosDCt
```
Estadisticas para obtener los valores de p, hacemos t de Student.

,c esta indica la columna
row=es igual a sacar datos de columnas, t de donde y welch es el metodod usado
```{r}
tStudent <- row_t_welch(DosDCt[,c("A","B","C")],DosDCt[,c("D", "E", "F")])
tStudent
```
obs es de observacion, des esta tabla lo que nos interesa es el valor de p, para eso vamos a crear una nueva base de dato

Recuperar el valor de P para cada gen

En select ponemo 1 porque es la columna de donde se saca lo valores de P Value por ser la unica y PV entre comillas es el nombre de la columna qeu decisimio mutar con el valor de la tabal de tStudent 
```{r}
PValue<- DosDCt %>%
  mutate(PV = tStudent$pvalue,
         LPV = -log(PV)) %>%
  select(1,"PV", "LPV")
PValue
``` 
PAra hacer una grafica de Vulcano se ncesita en y= -log(PV)  X= log2(2DEltaDEltaCT)

Ahora vamos a sacar el valor de log2(2DEltaDEltaCT)
Primero sacamos proemdio controles (A,B y C) y el de los tratamientos (D.E,F,)
```{r}
DosDDCt <- DosDCt %>%
  mutate(mean_DosDCt_Cx = (A+B+C)/3,
         mean_DosDCt_Tx = (A+B+C)/3, 
        DosDDCt = mean_DosDCt_Tx/mean_DosDCt_Tx,
        lDosDDCt = log2(DosDDCt))
DosDDCt
  
```
GRafica

```{r}
V_plot <- ggplot(mapping = aes(x = DosDDCt$lDosDDCt, 
                               y = PValue$LPV)) +
  geom_point()
V_plot
```
